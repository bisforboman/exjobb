digraph p_Env {
size="8,10";
  GT [shape=box,style=dotted,label="Env"];
  GT -> S8;
	S8 -> S4  [color=black,style=dashed,label="envChan?meter"];
  S8 [color=blue,style=bold,shape=box];
	S4 -> S5  [color=black,style=dashed,label="envChan!bigData"];
	S4 -> S5  [color=black,style=dashed,label="envChan!smallData"];
	S5 -> S6  [color=black,style=dashed,label=".(goto)"];
	S6 -> S8  [color=black,style=bold,label="goto Idle"];
}
digraph p_Server {
size="8,10";
  GT [shape=box,style=dotted,label="Server"];
  GT -> S8;
	S8 -> S2  [color=black,style=bold,label="servChan?smallData"];
	S8 -> S5  [color=black,style=bold,label="servChan?bigData"];
	S2 -> S8  [color=black,style=bold,label="servChan!continue"];
	S5 -> S6  [color=black,style=bold,label="sC = 1"];
	S6 -> S17  [color=black,style=bold,label="servChan!stop"];
	S17 -> S11  [color=black,style=bold,label="servChan?smallData"];
  S17 [color=blue,style=bold,shape=box];
	S17 -> S14  [color=black,style=bold,label="servChan?bigData"];
  S17 [color=blue,style=bold,shape=box];
	S11 -> S17  [color=black,style=bold,label="servChan!stop"];
	S14 -> S15  [color=black,style=bold,label="oC = 1"];
	S15 -> S17  [color=black,style=bold,label="servChan!stop"];
}
digraph p_Node {
size="8,10";
  GT [shape=box,style=dotted,label="Node"];
  GT -> S1;
	S1 -> S2  [color=black,style=bold,label="cN = (cN+1)"];
	S2 -> S9  [color=black,style=bold,label="envChan!meter"];
	S9 -> S4  [color=black,style=bold,label="envChan?bigData"];
	S9 -> S7  [color=black,style=bold,label="envChan?smallData"];
	S4 -> S17  [color=black,style=bold,label="servChan!bigData"];
	S17 -> S12  [color=black,style=dashed,label="servChan?continue"];
	S17 -> S14  [color=black,style=dashed,label="servChan?stop"];
	S12 -> S2  [color=black,style=bold,label="goto Idle"];
	S14 -> S16  [color=black,style=dashed,label="cN = (cN-1)"];
	S16 -> S18  [color=black,style=bold,label=".(goto)"];
	S18 -> S0  [color=black,style=solid,label="-end-"];
  S18 [color=blue,style=bold,shape=box];
	S7 -> S17  [color=black,style=bold,label="servChan!smallData"];
}
digraph claim_liveness {
size="8,10";
  GT [shape=box,style=dotted,label="liveness"];
  GT -> S6;
	S6 -> S6  [color=black,style=bold,label="(!(sC))"];
  S6 [color=red,style=bold];
	S6 -> S4  [color=black,style=dashed,label="((!(!((cN==0)))&&!(sC)))"];
  S6 [color=red,style=bold];
	S4 -> S6  [color=black,style=bold,label="assert(!((!(!((cN==0)))&&!(sC))))"];
}
